{"ast":null,"code":"import _slicedToArray from \"/Users/johntraut/code/testing/materialuichat/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/johntraut/code/testing/materialuichat/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/johntraut/code/testing/materialuichat/src/components/Store.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport io from 'socket.io-client';\nexport const CTX = React.createContext(); // chat will come in like\n//from: 'user'\n//msg: 'hi'\n//topic: 'general'\n\nconst initState = {\n  general: [{\n    from: 'john',\n    msg: 'this is rough'\n  }, {\n    from: 'john',\n    msg: 'really rough'\n  }],\n  topic2: [{\n    from: 'john',\n    msg: 'this is rough'\n  }, {\n    from: 'john',\n    msg: 'really rough'\n  }]\n};\n\nconst reducer = (state, action) => {\n  //destruct to make more clean \n  const _action$payload = action.payload,\n        from = _action$payload.from,\n        msg = _action$payload.msg,\n        topic = _action$payload.topic;\n\n  switch (action.type) {\n    case 'RECEIVE_MESSAGE':\n      return _objectSpread({}, state, {\n        //then pull the specific topic \n        [topic]: [//then bring forward all old messages in the topic\n        ...state[topic], {\n          from,\n          msg\n        }]\n      });\n\n    default:\n      return state;\n  }\n};\n\nlet socket;\n\nfunction sendChatAction(value) {\n  socket.emit(\"chat message\", value);\n}\n\nexport default function Store(props) {\n  if (!socket) {\n    socket = io(':3002');\n  }\n\n  const user = 'John' + Math.random(100).toFixed(2);\n\n  const _React$useReducer = React.useReducer(reducer, initState),\n        _React$useReducer2 = _slicedToArray(_React$useReducer, 1),\n        allChats = _React$useReducer2[0];\n\n  return React.createElement(CTX.Provider, {\n    value: {\n      allChats,\n      sendChatAction,\n      user\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, props.children);\n}","map":{"version":3,"sources":["/Users/johntraut/code/testing/materialuichat/src/components/Store.js"],"names":["React","io","CTX","createContext","initState","general","from","msg","topic2","reducer","state","action","payload","topic","type","socket","sendChatAction","value","emit","Store","props","user","Math","random","toFixed","useReducer","allChats","children"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,kBAAf;AAGA,OAAO,MAAMC,GAAG,GAAGF,KAAK,CAACG,aAAN,EAAZ,C,CAGP;AACA;AACA;AACA;;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,OAAO,EAAE,CACL;AAACC,IAAAA,IAAI,EAAE,MAAP;AAAeC,IAAAA,GAAG,EAAC;AAAnB,GADK,EAEL;AAACD,IAAAA,IAAI,EAAE,MAAP;AAAeC,IAAAA,GAAG,EAAC;AAAnB,GAFK,CADK;AAKdC,EAAAA,MAAM,EAAE,CACJ;AAACF,IAAAA,IAAI,EAAE,MAAP;AAAeC,IAAAA,GAAG,EAAC;AAAnB,GADI,EAEJ;AAACD,IAAAA,IAAI,EAAE,MAAP;AAAeC,IAAAA,GAAG,EAAC;AAAnB,GAFI;AALM,CAAlB;;AAYA,MAAME,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAE/B;AAF+B,0BAGJA,MAAM,CAACC,OAHH;AAAA,QAGxBN,IAHwB,mBAGxBA,IAHwB;AAAA,QAGlBC,GAHkB,mBAGlBA,GAHkB;AAAA,QAGbM,KAHa,mBAGbA,KAHa;;AAI/B,UAAOF,MAAM,CAACG,IAAd;AACI,SAAK,iBAAL;AACA,+BAEOJ,KAFP;AAGI;AACA,SAACG,KAAD,GACA,CACI;AACJ,WAAGH,KAAK,CAACG,KAAD,CAFR,EAEiB;AAACP,UAAAA,IAAD;AAAOC,UAAAA;AAAP,SAFjB;AALJ;;AAUA;AACI,aAAOG,KAAP;AAbR;AAeH,CAnBD;;AAqBA,IAAIK,MAAJ;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA8B;AAC1BF,EAAAA,MAAM,CAACG,IAAP,CAAY,cAAZ,EAA4BD,KAA5B;AACH;;AAED,eAAe,SAASE,KAAT,CAAeC,KAAf,EAAsB;AAEjC,MAAG,CAACL,MAAJ,EAAY;AACRA,IAAAA,MAAM,GAAGd,EAAE,CAAC,OAAD,CAAX;AACH;;AACL,QAAMoB,IAAI,GAAG,SAASC,IAAI,CAACC,MAAL,CAAY,GAAZ,EAAiBC,OAAjB,CAAyB,CAAzB,CAAtB;;AALqC,4BAOlBxB,KAAK,CAACyB,UAAN,CAAiBhB,OAAjB,EAA0BL,SAA1B,CAPkB;AAAA;AAAA,QAO9BsB,QAP8B;;AASjC,SACI,oBAAC,GAAD,CAAK,QAAL;AAAc,IAAA,KAAK,EAAE;AAACA,MAAAA,QAAD;AAAWV,MAAAA,cAAX;AAA2BK,MAAAA;AAA3B,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,KAAK,CAACO,QADX,CADJ;AAKH","sourcesContent":["import React from 'react';\nimport io from 'socket.io-client'\n\n\nexport const CTX = React.createContext();\n\n\n// chat will come in like\n//from: 'user'\n//msg: 'hi'\n//topic: 'general'\n\nconst initState = {\n    general: [\n        {from: 'john', msg:'this is rough'},\n        {from: 'john', msg:'really rough'},\n    ],\n    topic2: [\n        {from: 'john', msg:'this is rough'},\n        {from: 'john', msg:'really rough'},\n\n    ]\n}\n\nconst reducer = (state, action) => {\n\n    //destruct to make more clean \n    const {from, msg, topic} = action.payload;\n    switch(action.type){\n        case 'RECEIVE_MESSAGE':\n        return {\n            //bring in our entire state\n            ...state,\n            //then pull the specific topic \n            [topic]: \n            [\n                //then bring forward all old messages in the topic\n            ...state[topic], {from, msg}\n            ]\n        }\n        default:\n            return state\n    }\n}\n\nlet socket;\n\nfunction sendChatAction(value){\n    socket.emit(\"chat message\", value)\n}\n\nexport default function Store(props) {\n\n    if(!socket) {\n        socket = io(':3002')\n    }\nconst user = 'John' + Math.random(100).toFixed(2);\n\nconst [allChats] = React.useReducer(reducer, initState)\n\n    return (\n        <CTX.Provider value={{allChats, sendChatAction, user}}>\n            {props.children}\n        </CTX.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}